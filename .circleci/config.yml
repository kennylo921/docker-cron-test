version: 2.1

orbs:
  gcp-gcr: circleci/gcp-gcr@0.13.0

jobs:
  build_and_push:
    steps:
      # test orb commands
      - checkout
      - gcp-gcr/gcr-auth
      - run:
          name: Go to app directory
          command: |
            cd app
      - gcp-gcr/build-image:
          registry-url: gcr.io
          image: sample-image
          tag: ${CIRCLE_SHA1:0:7}.${CIRCLE_BUILD_NUM}
          path: ~/app/
          docker-context: ~/app/

      - gcp-gcr/push-image:
          registry-url: gcr.io
          image: sample-image
          tag: ${CIRCLE_SHA1:0:7}.${CIRCLE_BUILD_NUM}

      - gcp-gcr/tag-image:
          registry-url: gcr.io
          image: sample-image
          source-tag: ${CIRCLE_SHA1:0:7}.${CIRCLE_BUILD_NUM}
          target-tag: tagged.${CIRCLE_BUILD_NUM}
  deploy:
    docker:
      - image: hashicorp/terraform:0.13.5
    # https://circleci.com/docs/2.0/env-vars/#alpine-linux
    shell: /bin/sh -leo pipefail
    environment:
      - BASH_ENV: /etc/profile
    steps:
      - *determine_environment
      - checkout
      - run:
          name: Setup Terraform credentials
          command: |
            echo "credentials \"app.terraform.io\" {
              token = \"${TERRAFORM_TOKEN}\"
            }" > ~/.terraformrc
      - run:
          name: Terraform initialise
          command: |
            cd platform/env-staging
            terraform init -input=false -no-color
      - run:
          name: Terraform plan
          command: |
            cd platform/env-staging
            terraform plan -input=false -no-color -out=plan/plan-${CIRCLE_BUILD_NUM}.zip
      - run:
          name: Terraform apply
          command: |
            cd platform/env-staging
            terraform apply -input=false -no-color -auto-approve plan/plan-${CIRCLE_BUILD_NUM}.zip
workflows:
  version: 2
  deploy_infrastructure:
    when:
      or:
        - equal: [ staging, << pipeline.git.branch >> ]
        - equal: [ main, << pipeline.git.branch >> ]
    jobs:
      - build_and_push:
      # - deploy:
      #     requires:
      #       - build_and_push
